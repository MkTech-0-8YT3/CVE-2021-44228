package com.code.provider;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.http.HttpEntity;
import org.springframework.http.HttpHeaders;
import org.springframework.http.MediaType;
import org.springframework.web.bind.annotation.*;

import java.io.File;
import java.io.IOException;
import java.io.InputStream;
import java.nio.file.Files;
import java.nio.file.Path;

@RestController
public class BaseRestController {

    private FileService fileService;
    private Compiler compiler;

    @Autowired
    public BaseRestController(FileService fileService, Compiler compiler) {
        this.fileService = fileService;
        this.compiler = compiler;
    }

    @PostMapping("/uploadCode")
    public String uploadCode(@RequestParam String code) {
        fileService.saveDataToFile(code);
        compiler.compileCodeFromFile(fileService.getTemporaryStoragePath()
                + File.separator + fileService.getTempJavaFileName());
        return "Compiled code served on: <a href=\"/getExploitCode\">/getExploitCode</a>";
    }

    @GetMapping(value = "/getExploitCode")
    public HttpEntity<byte[]> getExploitCode() {
        try {
            Path filePath = Path.of(fileService.getTemporaryStoragePath() +
                    File.separator + fileService.getClassFileName());
            InputStream inputStream = Files.newInputStream(filePath);
            HttpHeaders httpHeaders = new HttpHeaders();
            httpHeaders.setContentType(MediaType.APPLICATION_OCTET_STREAM);
            httpHeaders.setContentDispositionFormData("Exploit", fileService.getClassFileName());
            return new HttpEntity<>(inputStream.readAllBytes(), httpHeaders);
        } catch (IOException e) {
            throw new RuntimeException(e);
        }
    }
}
